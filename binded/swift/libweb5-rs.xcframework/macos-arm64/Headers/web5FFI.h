// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    uint64_t capacity;
    uint64_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H
#ifndef UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
#define UNIFFI_FFIDEF_RUST_FUTURE_CONTINUATION_CALLBACK
typedef void (*UniffiRustFutureContinuationCallback)(uint64_t, int8_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_FREE
typedef void (*UniffiForeignFutureFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_FREE
typedef void (*UniffiCallbackInterfaceFree)(uint64_t
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE
#define UNIFFI_FFIDEF_FOREIGN_FUTURE
typedef struct UniffiForeignFuture {
    uint64_t handle;
    UniffiForeignFutureFree _Nonnull free;
} UniffiForeignFuture;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U8
typedef struct UniffiForeignFutureStructU8 {
    uint8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U8
typedef void (*UniffiForeignFutureCompleteU8)(uint64_t, UniffiForeignFutureStructU8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I8
typedef struct UniffiForeignFutureStructI8 {
    int8_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI8;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I8
typedef void (*UniffiForeignFutureCompleteI8)(uint64_t, UniffiForeignFutureStructI8
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U16
typedef struct UniffiForeignFutureStructU16 {
    uint16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U16
typedef void (*UniffiForeignFutureCompleteU16)(uint64_t, UniffiForeignFutureStructU16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I16
typedef struct UniffiForeignFutureStructI16 {
    int16_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI16;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I16
typedef void (*UniffiForeignFutureCompleteI16)(uint64_t, UniffiForeignFutureStructI16
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U32
typedef struct UniffiForeignFutureStructU32 {
    uint32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U32
typedef void (*UniffiForeignFutureCompleteU32)(uint64_t, UniffiForeignFutureStructU32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I32
typedef struct UniffiForeignFutureStructI32 {
    int32_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I32
typedef void (*UniffiForeignFutureCompleteI32)(uint64_t, UniffiForeignFutureStructI32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_U64
typedef struct UniffiForeignFutureStructU64 {
    uint64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructU64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_U64
typedef void (*UniffiForeignFutureCompleteU64)(uint64_t, UniffiForeignFutureStructU64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_I64
typedef struct UniffiForeignFutureStructI64 {
    int64_t returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructI64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_I64
typedef void (*UniffiForeignFutureCompleteI64)(uint64_t, UniffiForeignFutureStructI64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F32
typedef struct UniffiForeignFutureStructF32 {
    float returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF32;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F32
typedef void (*UniffiForeignFutureCompleteF32)(uint64_t, UniffiForeignFutureStructF32
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_F64
typedef struct UniffiForeignFutureStructF64 {
    double returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructF64;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_F64
typedef void (*UniffiForeignFutureCompleteF64)(uint64_t, UniffiForeignFutureStructF64
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_POINTER
typedef struct UniffiForeignFutureStructPointer {
    void*_Nonnull returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructPointer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_POINTER
typedef void (*UniffiForeignFutureCompletePointer)(uint64_t, UniffiForeignFutureStructPointer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_RUST_BUFFER
typedef struct UniffiForeignFutureStructRustBuffer {
    RustBuffer returnValue;
    RustCallStatus callStatus;
} UniffiForeignFutureStructRustBuffer;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_RUST_BUFFER
typedef void (*UniffiForeignFutureCompleteRustBuffer)(uint64_t, UniffiForeignFutureStructRustBuffer
    );

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_STRUCT_VOID
typedef struct UniffiForeignFutureStructVoid {
    RustCallStatus callStatus;
} UniffiForeignFutureStructVoid;

#endif
#ifndef UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FOREIGN_FUTURE_COMPLETE_VOID
typedef void (*UniffiForeignFutureCompleteVoid)(uint64_t, UniffiForeignFutureStructVoid
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_METHOD0
typedef void (*UniffiCallbackInterfaceKeyMethod0)(uint64_t, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_METHOD1
typedef void (*UniffiCallbackInterfaceKeyMethod1)(uint64_t, void*_Nonnull* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD0
typedef void (*UniffiCallbackInterfaceKeyManagerMethod0)(uint64_t, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD1
typedef void (*UniffiCallbackInterfaceKeyManagerMethod1)(uint64_t, RustBuffer, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD2
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD2
typedef void (*UniffiCallbackInterfaceKeyManagerMethod2)(uint64_t, RustBuffer, void*_Nonnull* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD3
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD3
typedef void (*UniffiCallbackInterfaceKeyManagerMethod3)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD4
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_MANAGER_METHOD4
typedef void (*UniffiCallbackInterfaceKeyManagerMethod4)(uint64_t, RustBuffer, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD0
typedef void (*UniffiCallbackInterfaceKeyStoreMethod0)(uint64_t, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD1
typedef void (*UniffiCallbackInterfaceKeyStoreMethod1)(uint64_t, RustBuffer, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD2
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD2
typedef void (*UniffiCallbackInterfaceKeyStoreMethod2)(uint64_t, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD3
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD3
typedef void (*UniffiCallbackInterfaceKeyStoreMethod3)(uint64_t, RustBuffer, void*_Nonnull* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD4
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD4
typedef void (*UniffiCallbackInterfaceKeyStoreMethod4)(uint64_t, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD5
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_KEY_STORE_METHOD5
typedef void (*UniffiCallbackInterfaceKeyStoreMethod5)(uint64_t, RustBuffer, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_PRIVATE_KEY_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_PRIVATE_KEY_METHOD0
typedef void (*UniffiCallbackInterfacePrivateKeyMethod0)(uint64_t, RustBuffer, RustBuffer* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_PRIVATE_KEY_METHOD1
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_PRIVATE_KEY_METHOD1
typedef void (*UniffiCallbackInterfacePrivateKeyMethod1)(uint64_t, void*_Nonnull* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_CALLBACK_INTERFACE_PUBLIC_KEY_METHOD0
#define UNIFFI_FFIDEF_CALLBACK_INTERFACE_PUBLIC_KEY_METHOD0
typedef void (*UniffiCallbackInterfacePublicKeyMethod0)(uint64_t, RustBuffer, RustBuffer, void* _Nonnull, 
        RustCallStatus *_Nonnull uniffiCallStatus
    );

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEY
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEY
typedef struct UniffiVTableCallbackInterfaceKey {
    UniffiCallbackInterfaceKeyMethod0 _Nonnull alias;
    UniffiCallbackInterfaceKeyMethod1 _Nonnull jwk;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceKey;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEY_MANAGER
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEY_MANAGER
typedef struct UniffiVTableCallbackInterfaceKeyManager {
    UniffiCallbackInterfaceKeyManagerMethod0 _Nonnull exportPrivateKeys;
    UniffiCallbackInterfaceKeyManagerMethod1 _Nonnull generatePrivateKey;
    UniffiCallbackInterfaceKeyManagerMethod2 _Nonnull getPublicKey;
    UniffiCallbackInterfaceKeyManagerMethod3 _Nonnull importPrivateKeys;
    UniffiCallbackInterfaceKeyManagerMethod4 _Nonnull sign;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceKeyManager;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEY_STORE
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_KEY_STORE
typedef struct UniffiVTableCallbackInterfaceKeyStore {
    UniffiCallbackInterfaceKeyStoreMethod0 _Nonnull exportPrivateKeys;
    UniffiCallbackInterfaceKeyStoreMethod1 _Nonnull generateNew;
    UniffiCallbackInterfaceKeyStoreMethod2 _Nonnull getAllAliases;
    UniffiCallbackInterfaceKeyStoreMethod3 _Nonnull getPublicKey;
    UniffiCallbackInterfaceKeyStoreMethod4 _Nonnull importPrivateKeys;
    UniffiCallbackInterfaceKeyStoreMethod5 _Nonnull sign;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfaceKeyStore;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_PRIVATE_KEY
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_PRIVATE_KEY
typedef struct UniffiVTableCallbackInterfacePrivateKey {
    UniffiCallbackInterfacePrivateKeyMethod0 _Nonnull sign;
    UniffiCallbackInterfacePrivateKeyMethod1 _Nonnull toPublic;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfacePrivateKey;

#endif
#ifndef UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_PUBLIC_KEY
#define UNIFFI_FFIDEF_V_TABLE_CALLBACK_INTERFACE_PUBLIC_KEY
typedef struct UniffiVTableCallbackInterfacePublicKey {
    UniffiCallbackInterfacePublicKeyMethod0 _Nonnull verify;
    UniffiCallbackInterfaceFree _Nonnull uniffiFree;
} UniffiVTableCallbackInterfacePublicKey;

#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_BEARERDID
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_BEARERDID
void*_Nonnull uniffi_web5_fn_clone_bearerdid(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_BEARERDID
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_BEARERDID
void uniffi_web5_fn_free_bearerdid(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_BEARERDID_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_BEARERDID_SIGN
RustBuffer uniffi_web5_fn_method_bearerdid_sign(void*_Nonnull ptr, RustBuffer key_selector, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_CLAIMS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_CLAIMS
void*_Nonnull uniffi_web5_fn_clone_claims(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_CLAIMS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_CLAIMS
void uniffi_web5_fn_free_claims(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_CLAIMS_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_CLAIMS_NEW
void*_Nonnull uniffi_web5_fn_constructor_claims_new(RustBuffer issuer, RustBuffer subject, RustBuffer audience, RustBuffer expiration, RustBuffer not_before, RustBuffer issued_at, RustBuffer jti, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_CLAIMS_ENCODE
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_CLAIMS_ENCODE
RustBuffer uniffi_web5_fn_method_claims_encode(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_CLAIMS_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_CLAIMS_SIGN
RustBuffer uniffi_web5_fn_method_claims_sign(void*_Nonnull ptr, void*_Nonnull bearer_did, RustBuffer key_selector, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_INMEMORYKEYSTORE
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_INMEMORYKEYSTORE
void*_Nonnull uniffi_web5_fn_clone_inmemorykeystore(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_INMEMORYKEYSTORE
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_INMEMORYKEYSTORE
void uniffi_web5_fn_free_inmemorykeystore(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_INMEMORYKEYSTORE_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_INMEMORYKEYSTORE_NEW
void*_Nonnull uniffi_web5_fn_constructor_inmemorykeystore_new(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_EXPORT_PRIVATE_KEYS
RustBuffer uniffi_web5_fn_method_inmemorykeystore_export_private_keys(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_GENERATE_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_GENERATE_NEW
RustBuffer uniffi_web5_fn_method_inmemorykeystore_generate_new(void*_Nonnull ptr, RustBuffer curve, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_GET_ALL_ALIASES
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_GET_ALL_ALIASES
RustBuffer uniffi_web5_fn_method_inmemorykeystore_get_all_aliases(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_GET_PUBLIC_KEY
void*_Nonnull uniffi_web5_fn_method_inmemorykeystore_get_public_key(void*_Nonnull ptr, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_IMPORT_PRIVATE_KEYS
void uniffi_web5_fn_method_inmemorykeystore_import_private_keys(void*_Nonnull ptr, RustBuffer private_keys, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_INMEMORYKEYSTORE_SIGN
RustBuffer uniffi_web5_fn_method_inmemorykeystore_sign(void*_Nonnull ptr, RustBuffer key_alias, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_JWK
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_JWK
void*_Nonnull uniffi_web5_fn_clone_jwk(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_JWK
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_JWK
void uniffi_web5_fn_free_jwk(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_ALIAS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_ALIAS
RustBuffer uniffi_web5_fn_method_jwk_alias(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_COMPUTE_THUMBPRINT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_COMPUTE_THUMBPRINT
RustBuffer uniffi_web5_fn_method_jwk_compute_thumbprint(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_JWK
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_JWK
void*_Nonnull uniffi_web5_fn_method_jwk_jwk(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_SIGN
RustBuffer uniffi_web5_fn_method_jwk_sign(void*_Nonnull ptr, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_TO_PUBLIC
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_TO_PUBLIC
void*_Nonnull uniffi_web5_fn_method_jwk_to_public(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_VERIFY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_JWK_VERIFY
void uniffi_web5_fn_method_jwk_verify(void*_Nonnull ptr, RustBuffer payload, RustBuffer signature, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_KEY
void*_Nonnull uniffi_web5_fn_clone_key(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_KEY
void uniffi_web5_fn_free_key(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEY_ALIAS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEY_ALIAS
RustBuffer uniffi_web5_fn_method_key_alias(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEY_JWK
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEY_JWK
void*_Nonnull uniffi_web5_fn_method_key_jwk(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_KEYMANAGER
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_KEYMANAGER
void*_Nonnull uniffi_web5_fn_clone_keymanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_KEYMANAGER
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_KEYMANAGER
void uniffi_web5_fn_free_keymanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_EXPORT_PRIVATE_KEYS
RustBuffer uniffi_web5_fn_method_keymanager_export_private_keys(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_GENERATE_PRIVATE_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_GENERATE_PRIVATE_KEY
RustBuffer uniffi_web5_fn_method_keymanager_generate_private_key(void*_Nonnull ptr, RustBuffer curve, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_GET_PUBLIC_KEY
void*_Nonnull uniffi_web5_fn_method_keymanager_get_public_key(void*_Nonnull ptr, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_IMPORT_PRIVATE_KEYS
void uniffi_web5_fn_method_keymanager_import_private_keys(void*_Nonnull ptr, RustBuffer private_keys, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYMANAGER_SIGN
RustBuffer uniffi_web5_fn_method_keymanager_sign(void*_Nonnull ptr, RustBuffer key_alias, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_KEYSTORE
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_KEYSTORE
void*_Nonnull uniffi_web5_fn_clone_keystore(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_KEYSTORE
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_KEYSTORE
void uniffi_web5_fn_free_keystore(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_EXPORT_PRIVATE_KEYS
RustBuffer uniffi_web5_fn_method_keystore_export_private_keys(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_GENERATE_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_GENERATE_NEW
RustBuffer uniffi_web5_fn_method_keystore_generate_new(void*_Nonnull ptr, RustBuffer curve, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_GET_ALL_ALIASES
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_GET_ALL_ALIASES
RustBuffer uniffi_web5_fn_method_keystore_get_all_aliases(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_GET_PUBLIC_KEY
void*_Nonnull uniffi_web5_fn_method_keystore_get_public_key(void*_Nonnull ptr, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_IMPORT_PRIVATE_KEYS
void uniffi_web5_fn_method_keystore_import_private_keys(void*_Nonnull ptr, RustBuffer private_keys, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_KEYSTORE_SIGN
RustBuffer uniffi_web5_fn_method_keystore_sign(void*_Nonnull ptr, RustBuffer key_alias, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_LOCALKEYMANAGER
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_LOCALKEYMANAGER
void*_Nonnull uniffi_web5_fn_clone_localkeymanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_LOCALKEYMANAGER
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_LOCALKEYMANAGER
void uniffi_web5_fn_free_localkeymanager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_LOCALKEYMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_LOCALKEYMANAGER_NEW
void*_Nonnull uniffi_web5_fn_constructor_localkeymanager_new(void*_Nonnull key_store, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_LOCALKEYMANAGER_NEW_IN_MEMORY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_LOCALKEYMANAGER_NEW_IN_MEMORY
void*_Nonnull uniffi_web5_fn_constructor_localkeymanager_new_in_memory(RustCallStatus *_Nonnull out_status
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_EXPORT_PRIVATE_KEYS
RustBuffer uniffi_web5_fn_method_localkeymanager_export_private_keys(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_GENERATE_PRIVATE_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_GENERATE_PRIVATE_KEY
RustBuffer uniffi_web5_fn_method_localkeymanager_generate_private_key(void*_Nonnull ptr, RustBuffer curve, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_GET_PUBLIC_KEY
void*_Nonnull uniffi_web5_fn_method_localkeymanager_get_public_key(void*_Nonnull ptr, RustBuffer key_alias, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_IMPORT_PRIVATE_KEYS
void uniffi_web5_fn_method_localkeymanager_import_private_keys(void*_Nonnull ptr, RustBuffer private_keys, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_LOCALKEYMANAGER_SIGN
RustBuffer uniffi_web5_fn_method_localkeymanager_sign(void*_Nonnull ptr, RustBuffer key_alias, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_PRIVATEKEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_PRIVATEKEY
void*_Nonnull uniffi_web5_fn_clone_privatekey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_PRIVATEKEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_PRIVATEKEY
void uniffi_web5_fn_free_privatekey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_PRIVATEKEY_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_PRIVATEKEY_SIGN
RustBuffer uniffi_web5_fn_method_privatekey_sign(void*_Nonnull ptr, RustBuffer payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_PRIVATEKEY_TO_PUBLIC
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_PRIVATEKEY_TO_PUBLIC
void*_Nonnull uniffi_web5_fn_method_privatekey_to_public(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_PUBLICKEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_PUBLICKEY
void*_Nonnull uniffi_web5_fn_clone_publickey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_PUBLICKEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_PUBLICKEY
void uniffi_web5_fn_free_publickey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_PUBLICKEY_VERIFY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_PUBLICKEY_VERIFY
void uniffi_web5_fn_method_publickey_verify(void*_Nonnull ptr, RustBuffer payload, RustBuffer signature, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_VERIFIABLECREDENTIAL
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CLONE_VERIFIABLECREDENTIAL
void*_Nonnull uniffi_web5_fn_clone_verifiablecredential(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_VERIFIABLECREDENTIAL
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FREE_VERIFIABLECREDENTIAL
void uniffi_web5_fn_free_verifiablecredential(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_VERIFIABLECREDENTIAL_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_CONSTRUCTOR_VERIFIABLECREDENTIAL_NEW
void*_Nonnull uniffi_web5_fn_constructor_verifiablecredential_new(RustBuffer context, RustBuffer id, RustBuffer type, RustBuffer issuer, int64_t issuance_date, RustBuffer expiration_date, RustBuffer credential_subject, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_VERIFIABLECREDENTIAL_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_METHOD_VERIFIABLECREDENTIAL_SIGN
RustBuffer uniffi_web5_fn_method_verifiablecredential_sign(void*_Nonnull ptr, void*_Nonnull bearer_did, RustBuffer key_selector, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_BEARER_DID_FROM_KEY_MANAGER
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_BEARER_DID_FROM_KEY_MANAGER
uint64_t uniffi_web5_fn_func_bearer_did_from_key_manager(RustBuffer did_uri, void*_Nonnull key_manager
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_SIGN_JWT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_SIGN_JWT
RustBuffer uniffi_web5_fn_func_sign_jwt(void*_Nonnull bearer_did, RustBuffer key_selector, RustBuffer encoded_header, RustBuffer encoded_payload, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_VERIFY_JWT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_VERIFY_JWT
uint64_t uniffi_web5_fn_func_verify_jwt(RustBuffer jwt
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_VERIFY_VCJWT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_FN_FUNC_VERIFY_VCJWT
uint64_t uniffi_web5_fn_func_verify_vcjwt(RustBuffer jwt
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_ALLOC
#define UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_ALLOC
RustBuffer ffi_web5_rustbuffer_alloc(uint64_t size, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_FROM_BYTES
#define UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_FROM_BYTES
RustBuffer ffi_web5_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_FREE
#define UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_FREE
void ffi_web5_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_RESERVE
#define UNIFFI_FFIDEF_FFI_WEB5_RUSTBUFFER_RESERVE
RustBuffer ffi_web5_rustbuffer_reserve(RustBuffer buf, uint64_t additional, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U8
void ffi_web5_rust_future_poll_u8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U8
void ffi_web5_rust_future_cancel_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U8
void ffi_web5_rust_future_free_u8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U8
uint8_t ffi_web5_rust_future_complete_u8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I8
void ffi_web5_rust_future_poll_i8(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I8
void ffi_web5_rust_future_cancel_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I8
void ffi_web5_rust_future_free_i8(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I8
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I8
int8_t ffi_web5_rust_future_complete_i8(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U16
void ffi_web5_rust_future_poll_u16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U16
void ffi_web5_rust_future_cancel_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U16
void ffi_web5_rust_future_free_u16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U16
uint16_t ffi_web5_rust_future_complete_u16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I16
void ffi_web5_rust_future_poll_i16(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I16
void ffi_web5_rust_future_cancel_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I16
void ffi_web5_rust_future_free_i16(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I16
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I16
int16_t ffi_web5_rust_future_complete_i16(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U32
void ffi_web5_rust_future_poll_u32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U32
void ffi_web5_rust_future_cancel_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U32
void ffi_web5_rust_future_free_u32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U32
uint32_t ffi_web5_rust_future_complete_u32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I32
void ffi_web5_rust_future_poll_i32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I32
void ffi_web5_rust_future_cancel_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I32
void ffi_web5_rust_future_free_i32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I32
int32_t ffi_web5_rust_future_complete_i32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_U64
void ffi_web5_rust_future_poll_u64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_U64
void ffi_web5_rust_future_cancel_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_U64
void ffi_web5_rust_future_free_u64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_U64
uint64_t ffi_web5_rust_future_complete_u64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_I64
void ffi_web5_rust_future_poll_i64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_I64
void ffi_web5_rust_future_cancel_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_I64
void ffi_web5_rust_future_free_i64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_I64
int64_t ffi_web5_rust_future_complete_i64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_F32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_F32
void ffi_web5_rust_future_poll_f32(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_F32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_F32
void ffi_web5_rust_future_cancel_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_F32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_F32
void ffi_web5_rust_future_free_f32(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_F32
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_F32
float ffi_web5_rust_future_complete_f32(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_F64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_F64
void ffi_web5_rust_future_poll_f64(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_F64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_F64
void ffi_web5_rust_future_cancel_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_F64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_F64
void ffi_web5_rust_future_free_f64(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_F64
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_F64
double ffi_web5_rust_future_complete_f64(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_POINTER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_POINTER
void ffi_web5_rust_future_poll_pointer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_POINTER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_POINTER
void ffi_web5_rust_future_cancel_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_POINTER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_POINTER
void ffi_web5_rust_future_free_pointer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_POINTER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_POINTER
void*_Nonnull ffi_web5_rust_future_complete_pointer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_RUST_BUFFER
void ffi_web5_rust_future_poll_rust_buffer(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_RUST_BUFFER
void ffi_web5_rust_future_cancel_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_RUST_BUFFER
void ffi_web5_rust_future_free_rust_buffer(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_RUST_BUFFER
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_RUST_BUFFER
RustBuffer ffi_web5_rust_future_complete_rust_buffer(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_VOID
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_POLL_VOID
void ffi_web5_rust_future_poll_void(uint64_t handle, UniffiRustFutureContinuationCallback _Nonnull callback, uint64_t callback_data
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_VOID
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_CANCEL_VOID
void ffi_web5_rust_future_cancel_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_VOID
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_FREE_VOID
void ffi_web5_rust_future_free_void(uint64_t handle
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_VOID
#define UNIFFI_FFIDEF_FFI_WEB5_RUST_FUTURE_COMPLETE_VOID
void ffi_web5_rust_future_complete_void(uint64_t handle, RustCallStatus *_Nonnull out_status
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_BEARER_DID_FROM_KEY_MANAGER
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_BEARER_DID_FROM_KEY_MANAGER
uint16_t uniffi_web5_checksum_func_bearer_did_from_key_manager(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_SIGN_JWT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_SIGN_JWT
uint16_t uniffi_web5_checksum_func_sign_jwt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_VERIFY_JWT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_VERIFY_JWT
uint16_t uniffi_web5_checksum_func_verify_jwt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_VERIFY_VCJWT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_FUNC_VERIFY_VCJWT
uint16_t uniffi_web5_checksum_func_verify_vcjwt(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_BEARERDID_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_BEARERDID_SIGN
uint16_t uniffi_web5_checksum_method_bearerdid_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_CLAIMS_ENCODE
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_CLAIMS_ENCODE
uint16_t uniffi_web5_checksum_method_claims_encode(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_CLAIMS_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_CLAIMS_SIGN
uint16_t uniffi_web5_checksum_method_claims_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_EXPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_inmemorykeystore_export_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_GENERATE_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_GENERATE_NEW
uint16_t uniffi_web5_checksum_method_inmemorykeystore_generate_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_GET_ALL_ALIASES
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_GET_ALL_ALIASES
uint16_t uniffi_web5_checksum_method_inmemorykeystore_get_all_aliases(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_GET_PUBLIC_KEY
uint16_t uniffi_web5_checksum_method_inmemorykeystore_get_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_IMPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_inmemorykeystore_import_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_INMEMORYKEYSTORE_SIGN
uint16_t uniffi_web5_checksum_method_inmemorykeystore_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_ALIAS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_ALIAS
uint16_t uniffi_web5_checksum_method_jwk_alias(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_COMPUTE_THUMBPRINT
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_COMPUTE_THUMBPRINT
uint16_t uniffi_web5_checksum_method_jwk_compute_thumbprint(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_JWK
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_JWK
uint16_t uniffi_web5_checksum_method_jwk_jwk(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_SIGN
uint16_t uniffi_web5_checksum_method_jwk_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_TO_PUBLIC
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_TO_PUBLIC
uint16_t uniffi_web5_checksum_method_jwk_to_public(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_VERIFY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_JWK_VERIFY
uint16_t uniffi_web5_checksum_method_jwk_verify(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEY_ALIAS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEY_ALIAS
uint16_t uniffi_web5_checksum_method_key_alias(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEY_JWK
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEY_JWK
uint16_t uniffi_web5_checksum_method_key_jwk(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_EXPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_keymanager_export_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_GENERATE_PRIVATE_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_GENERATE_PRIVATE_KEY
uint16_t uniffi_web5_checksum_method_keymanager_generate_private_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_GET_PUBLIC_KEY
uint16_t uniffi_web5_checksum_method_keymanager_get_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_IMPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_keymanager_import_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYMANAGER_SIGN
uint16_t uniffi_web5_checksum_method_keymanager_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_EXPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_keystore_export_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_GENERATE_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_GENERATE_NEW
uint16_t uniffi_web5_checksum_method_keystore_generate_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_GET_ALL_ALIASES
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_GET_ALL_ALIASES
uint16_t uniffi_web5_checksum_method_keystore_get_all_aliases(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_GET_PUBLIC_KEY
uint16_t uniffi_web5_checksum_method_keystore_get_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_IMPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_keystore_import_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_KEYSTORE_SIGN
uint16_t uniffi_web5_checksum_method_keystore_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_EXPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_EXPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_localkeymanager_export_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_GENERATE_PRIVATE_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_GENERATE_PRIVATE_KEY
uint16_t uniffi_web5_checksum_method_localkeymanager_generate_private_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_GET_PUBLIC_KEY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_GET_PUBLIC_KEY
uint16_t uniffi_web5_checksum_method_localkeymanager_get_public_key(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_IMPORT_PRIVATE_KEYS
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_IMPORT_PRIVATE_KEYS
uint16_t uniffi_web5_checksum_method_localkeymanager_import_private_keys(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_LOCALKEYMANAGER_SIGN
uint16_t uniffi_web5_checksum_method_localkeymanager_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_PRIVATEKEY_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_PRIVATEKEY_SIGN
uint16_t uniffi_web5_checksum_method_privatekey_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_PRIVATEKEY_TO_PUBLIC
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_PRIVATEKEY_TO_PUBLIC
uint16_t uniffi_web5_checksum_method_privatekey_to_public(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_PUBLICKEY_VERIFY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_PUBLICKEY_VERIFY
uint16_t uniffi_web5_checksum_method_publickey_verify(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_VERIFIABLECREDENTIAL_SIGN
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_METHOD_VERIFIABLECREDENTIAL_SIGN
uint16_t uniffi_web5_checksum_method_verifiablecredential_sign(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_CLAIMS_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_CLAIMS_NEW
uint16_t uniffi_web5_checksum_constructor_claims_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_INMEMORYKEYSTORE_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_INMEMORYKEYSTORE_NEW
uint16_t uniffi_web5_checksum_constructor_inmemorykeystore_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_LOCALKEYMANAGER_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_LOCALKEYMANAGER_NEW
uint16_t uniffi_web5_checksum_constructor_localkeymanager_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_LOCALKEYMANAGER_NEW_IN_MEMORY
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_LOCALKEYMANAGER_NEW_IN_MEMORY
uint16_t uniffi_web5_checksum_constructor_localkeymanager_new_in_memory(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_VERIFIABLECREDENTIAL_NEW
#define UNIFFI_FFIDEF_UNIFFI_WEB5_CHECKSUM_CONSTRUCTOR_VERIFIABLECREDENTIAL_NEW
uint16_t uniffi_web5_checksum_constructor_verifiablecredential_new(void
    
);
#endif
#ifndef UNIFFI_FFIDEF_FFI_WEB5_UNIFFI_CONTRACT_VERSION
#define UNIFFI_FFIDEF_FFI_WEB5_UNIFFI_CONTRACT_VERSION
uint32_t ffi_web5_uniffi_contract_version(void
    
);
#endif

