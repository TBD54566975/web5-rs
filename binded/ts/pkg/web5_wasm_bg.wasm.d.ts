/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_jwk_free(a: number): void;
export function jwk_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number): number;
export function jwk_alg(a: number, b: number): void;
export function jwk_kty(a: number, b: number): void;
export function jwk_crv(a: number, b: number): void;
export function jwk_d(a: number, b: number): void;
export function jwk_x(a: number, b: number): void;
export function jwk_y(a: number, b: number): void;
export function jwk_computeThumbprint(a: number, b: number): void;
export function jwk_verify(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function jwk_toPublic(a: number, b: number): void;
export function jwk_sign(a: number, b: number, c: number, d: number): void;
export function __wbg_localjwkmanager_free(a: number): void;
export function localjwkmanager_new(): number;
export function localjwkmanager_generatePrivateKey(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function localjwkmanager_getPublicKey(a: number, b: number, c: number, d: number): void;
export function localjwkmanager_sign(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function localjwkmanager_exportPrivateKeys(a: number, b: number): void;
export function localjwkmanager_importPrivateKeys(a: number, b: number, c: number, d: number): void;
export function __wbg_identifier_free(a: number): void;
export function identifier_parse(a: number, b: number, c: number): void;
export function identifier_uri(a: number, b: number): void;
export function identifier_url(a: number, b: number): void;
export function identifier_method(a: number, b: number): void;
export function identifier_id(a: number, b: number): void;
export function identifier_params(a: number): number;
export function identifier_path(a: number, b: number): void;
export function identifier_query(a: number, b: number): void;
export function identifier_fragment(a: number, b: number): void;
export function generateEd25519Key(a: number): void;
export function generateSecp256k1Key(a: number): void;
export function signSecp256k1(a: number, b: number, c: number, d: number): void;
export function signEd25519(a: number, b: number, c: number, d: number): void;
export function verifySecp256k1(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function verifyEd25519(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
